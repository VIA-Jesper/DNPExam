@page "/view"
@using GasPumpWebApp.Data
@using GasPump
@using Microsoft.AspNetCore.Routing.Matching

@inject ApiService ApiService


<h3>Pump Maintenance</h3>
<hr />
<br />



<div class="col-6 offset-3">
    @if (errorMessage.Length > 0)
    {
        <p class="alert-danger font-weight-bold">@errorMessage</p>
    }
    else if (waitMessage.Length > 0)
    {
        <p class="alert-info font-weight-bold">@waitMessage</p>
    }

    <div class="input-group mb-3">
        <div class="input-group-prepend">
            <button class="btn btn-outline-secondary" type="button" @onclick="LoadData">Load</button>
        </div>
        <select class="custom-select" id="inputGroupSelect03" @bind="selectedOption">
            <option value="-1" selected hidden>Choose...</option>
            <option value="1">Pump refills</option>
            <option value="2">Customer usage</option>
        </select>
    </div>



    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Date</th>
                @if (selectedOption == 2)
                {
                    <th scope="col">Amount</th>
                    <th scope="col">Remaining</th>
                }


            </tr>
        </thead>

        @if (selectedOption == 1)
        {
            <tbody>
                @foreach (var result in pumpFillHistory)
                {
                    <tr>
                        <th scope="row">@result.Id</th>
                        <td>@result.FillDate</td>
                    </tr>
                }
            </tbody>

        }
        else if (selectedOption == 2)
        {
            <tbody>
                @foreach (var result in pumpUsageHistory)
                {
                    <tr>
                        <th scope="row">@result.Id</th>
                        <td>@result.WithdrawDate</td>
                        <td>@result.GasWithdrawAmount</td>
                        <td>@result.RemainingGasInPump</td>


                    </tr>
                }
            </tbody>
        }
        else
        {
            <p>No data has been loaded...</p>
        }
    </table>

</div>
@code {

    private List<PumpUsageHistory> pumpUsageHistory = new List<PumpUsageHistory>();
    private List<PumpFillHistory> pumpFillHistory = new List<PumpFillHistory>();
    private int selectedOption;
    private string errorMessage = "";
    private string waitMessage = "";




    private async void LoadData()
    {
        errorMessage = "";
        waitMessage = "Loading data from server...";
        try
        {
            switch (selectedOption)
            {
                case 1:
                {
                    pumpFillHistory = await ApiService.GetAllPumpHistory();
                    break;
                }
                case 2:
                {
                    pumpUsageHistory = await ApiService.GetAllTankHistory();
                    break;
                }
                default:
                {
                    errorMessage = "Please select a table to view and press load button!";
                    break;
                }
            }
        }
        catch (Exception e)
        {
            errorMessage = e.Message;
        }
        waitMessage = "";
        StateHasChanged();
    }

}